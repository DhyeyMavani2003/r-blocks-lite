{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _useBlocklyWorkspace2 = _interopRequireDefault(require(\"./useBlocklyWorkspace\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar propTypes = {\n  initialXml: _propTypes.default.string,\n  toolboxConfiguration: _propTypes.default.object,\n  // eslint-disable-line react/forbid-prop-types\n  workspaceConfiguration: _propTypes.default.object,\n  // eslint-disable-line react/forbid-prop-types\n  className: _propTypes.default.string,\n  onWorkspaceChange: _propTypes.default.func,\n  onImportXmlError: _propTypes.default.func,\n  onXmlChange: _propTypes.default.func,\n  onInject: _propTypes.default.func,\n  onDispose: _propTypes.default.func\n};\nvar defaultProps = {\n  initialXml: null,\n  toolboxConfiguration: null,\n  workspaceConfiguration: null,\n  className: null,\n  onWorkspaceChange: null,\n  onImportXmlError: null,\n  onXmlChange: null,\n  onInject: null,\n  onDispose: null\n};\n\nfunction BlocklyWorkspace(_ref) {\n  var initialXml = _ref.initialXml,\n      toolboxConfiguration = _ref.toolboxConfiguration,\n      workspaceConfiguration = _ref.workspaceConfiguration,\n      className = _ref.className,\n      onWorkspaceChange = _ref.onWorkspaceChange,\n      onXmlChange = _ref.onXmlChange,\n      onImportXmlError = _ref.onImportXmlError,\n      onInject = _ref.onInject,\n      onDispose = _ref.onDispose;\n\n  var editorDiv = _react.default.useRef(null);\n\n  var _useBlocklyWorkspace = (0, _useBlocklyWorkspace2.default)({\n    ref: editorDiv,\n    initialXml: initialXml,\n    toolboxConfiguration: toolboxConfiguration,\n    workspaceConfiguration: workspaceConfiguration,\n    onWorkspaceChange: onWorkspaceChange,\n    onImportXmlError: onImportXmlError,\n    onInject: onInject,\n    onDispose: onDispose\n  }),\n      xml = _useBlocklyWorkspace.xml;\n\n  var onXmlChangeRef = _react.default.useRef(onXmlChange);\n\n  _react.default.useEffect(function () {\n    onXmlChangeRef.current = onXmlChange;\n  }, [onXmlChange]);\n\n  _react.default.useEffect(function () {\n    if (onXmlChangeRef.current && xml) {\n      onXmlChangeRef.current(xml);\n    }\n  }, [xml]);\n\n  return /*#__PURE__*/_react.default.createElement(\"div\", {\n    className: className,\n    ref: editorDiv\n  });\n}\n\nBlocklyWorkspace.propTypes = propTypes;\nBlocklyWorkspace.defaultProps = defaultProps;\nvar _default = BlocklyWorkspace;\nexports.default = _default;","map":{"version":3,"sources":["/Users/dhyeymavani/Documents/GitHub/r-blocks-lite/node_modules/react-blockly/dist/BlocklyWorkspace.js"],"names":["Object","defineProperty","exports","value","default","_react","_interopRequireDefault","require","_propTypes","_useBlocklyWorkspace2","obj","__esModule","propTypes","initialXml","string","toolboxConfiguration","object","workspaceConfiguration","className","onWorkspaceChange","func","onImportXmlError","onXmlChange","onInject","onDispose","defaultProps","BlocklyWorkspace","_ref","editorDiv","useRef","_useBlocklyWorkspace","ref","xml","onXmlChangeRef","useEffect","current","createElement","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _useBlocklyWorkspace2 = _interopRequireDefault(require(\"./useBlocklyWorkspace\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar propTypes = {\n  initialXml: _propTypes.default.string,\n  toolboxConfiguration: _propTypes.default.object,\n  // eslint-disable-line react/forbid-prop-types\n  workspaceConfiguration: _propTypes.default.object,\n  // eslint-disable-line react/forbid-prop-types\n  className: _propTypes.default.string,\n  onWorkspaceChange: _propTypes.default.func,\n  onImportXmlError: _propTypes.default.func,\n  onXmlChange: _propTypes.default.func,\n  onInject: _propTypes.default.func,\n  onDispose: _propTypes.default.func\n};\nvar defaultProps = {\n  initialXml: null,\n  toolboxConfiguration: null,\n  workspaceConfiguration: null,\n  className: null,\n  onWorkspaceChange: null,\n  onImportXmlError: null,\n  onXmlChange: null,\n  onInject: null,\n  onDispose: null\n};\n\nfunction BlocklyWorkspace(_ref) {\n  var initialXml = _ref.initialXml,\n      toolboxConfiguration = _ref.toolboxConfiguration,\n      workspaceConfiguration = _ref.workspaceConfiguration,\n      className = _ref.className,\n      onWorkspaceChange = _ref.onWorkspaceChange,\n      onXmlChange = _ref.onXmlChange,\n      onImportXmlError = _ref.onImportXmlError,\n      onInject = _ref.onInject,\n      onDispose = _ref.onDispose;\n\n  var editorDiv = _react.default.useRef(null);\n\n  var _useBlocklyWorkspace = (0, _useBlocklyWorkspace2.default)({\n    ref: editorDiv,\n    initialXml: initialXml,\n    toolboxConfiguration: toolboxConfiguration,\n    workspaceConfiguration: workspaceConfiguration,\n    onWorkspaceChange: onWorkspaceChange,\n    onImportXmlError: onImportXmlError,\n    onInject: onInject,\n    onDispose: onDispose\n  }),\n      xml = _useBlocklyWorkspace.xml;\n\n  var onXmlChangeRef = _react.default.useRef(onXmlChange);\n\n  _react.default.useEffect(function () {\n    onXmlChangeRef.current = onXmlChange;\n  }, [onXmlChange]);\n\n  _react.default.useEffect(function () {\n    if (onXmlChangeRef.current && xml) {\n      onXmlChangeRef.current(xml);\n    }\n  }, [xml]);\n\n  return (\n    /*#__PURE__*/\n    _react.default.createElement(\"div\", {\n      className: className,\n      ref: editorDiv\n    })\n  );\n}\n\nBlocklyWorkspace.propTypes = propTypes;\nBlocklyWorkspace.defaultProps = defaultProps;\nvar _default = BlocklyWorkspace;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}