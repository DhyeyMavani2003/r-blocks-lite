{"ast":null,"code":"import _slicedToArray from\"/Users/dhyeymavani/Documents/GitHub/r-blocks/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";//General\nimport React,{useState}from'react';//Modules (No Minor Modules please)\n//Icons\nimport FolderIcon from'@mui/icons-material/Folder';import PlayArrowIcon from'@mui/icons-material/PlayArrow';import DangerousIcon from'@mui/icons-material/Dangerous';import FiberNewIcon from'@mui/icons-material/FiberNew';//Blockly\nimport Blockly from\"blockly\";import{BlocklyWorkspace}from\"react-blockly\";import\"./blockly/blocks\";//Contexts\n//Style\nimport\"./styles/base.css\";import{jsx as _jsx}from\"react/jsx-runtime\";export default function Workspace(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),xml=_useState2[0],setXml=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),javascriptCode=_useState4[0],setJavascriptCode=_useState4[1];var initialXml='<xml xmlns=\"http://www.w3.org/1999/xhtml\"><block type=\"text\" x=\"70\" y=\"30\"><field name=\"TEXT\"></field></block></xml>';var toolboxCategories={kind:\"categoryToolbox\",contents:[{kind:\"category\",name:\"Basic\",colour:\"#ed544c\",contents:[{kind:\"block\",type:\"controls_if\"},{kind:\"block\",type:\"logic_compare\"},{kind:\"block\",type:\"math_round\"},{kind:\"block\",type:\"math_number\"},{kind:\"block\",type:\"new_boundary_function\"},{kind:\"block\",type:\"library\"}]},{kind:\"category\",name:\"Data\",colour:\"#ed8f4c\"},{kind:\"category\",name:\"Wrangling\",colour:\"#edd84c\"}]};function workspaceDidChange(workspace){var code=Blockly.JavaScript.workspaceToCode(workspace);setJavascriptCode(code);}var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),selected=_useState6[0],setSelected=_useState6[1];var cards=[\"Basic\",\"Data\",\"Wrangling\",\"Plots\",\"Statistics\",\"Modeling\"];var colors=[\"#ed544c\",\"#ed8f4c\",\"#edd84c\",\"#7aed4c\",\"#824ced\",\"#ed4cc2\"];return/*#__PURE__*/_jsx(BlocklyWorkspace,{className:\"blockly\",toolboxConfiguration:toolboxCategories,initialXml:initialXml,workspaceConfiguration:{grid:{spacing:20,length:3,colour:\"#ccc\",snap:true}},onWorkspaceChange:workspaceDidChange,onXmlChange:setXml});}","map":{"version":3,"sources":["/Users/dhyeymavani/Documents/GitHub/r-blocks/src/pages/modules/workspace.js"],"names":["React","useState","FolderIcon","PlayArrowIcon","DangerousIcon","FiberNewIcon","Blockly","BlocklyWorkspace","Workspace","xml","setXml","javascriptCode","setJavascriptCode","initialXml","toolboxCategories","kind","contents","name","colour","type","workspaceDidChange","workspace","code","JavaScript","workspaceToCode","selected","setSelected","cards","colors","grid","spacing","length","snap"],"mappings":"kIAAA;AACA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CAEA;AAEA;AACA,MAAOC,CAAAA,UAAP,KAAuB,4BAAvB,CACA,MAAOC,CAAAA,aAAP,KAA0B,+BAA1B,CACA,MAAOC,CAAAA,aAAP,KAA0B,+BAA1B,CACA,MAAOC,CAAAA,YAAP,KAAyB,8BAAzB,CAEA;AACA,MAAOC,CAAAA,OAAP,KAAoB,SAApB,CACA,OAASC,gBAAT,KAAiC,eAAjC,CACA,MAAO,kBAAP,CAEA;AAEA;AACA,MAAO,mBAAP,C,2CAEA,cAAe,SAASC,CAAAA,SAAT,EAAqB,CAChC,cAAsBP,QAAQ,CAAC,EAAD,CAA9B,wCAAOQ,GAAP,eAAYC,MAAZ,eACA,eAA4CT,QAAQ,CAAC,EAAD,CAApD,yCAAOU,cAAP,eAAuBC,iBAAvB,eAEA,GAAMC,CAAAA,UAAU,CACZ,sHADJ,CAEA,GAAMC,CAAAA,iBAAiB,CAAG,CACtBC,IAAI,CAAE,iBADgB,CAEtBC,QAAQ,CAAE,CACN,CACID,IAAI,CAAE,UADV,CAEIE,IAAI,CAAE,OAFV,CAGIC,MAAM,CAAE,SAHZ,CAIIF,QAAQ,CAAE,CACN,CACID,IAAI,CAAE,OADV,CAEII,IAAI,CAAE,aAFV,CADM,CAKN,CACIJ,IAAI,CAAE,OADV,CAEII,IAAI,CAAE,eAFV,CALM,CASN,CACIJ,IAAI,CAAE,OADV,CAEII,IAAI,CAAE,YAFV,CATM,CAaN,CACIJ,IAAI,CAAE,OADV,CAEII,IAAI,CAAE,aAFV,CAbM,CAiBN,CACIJ,IAAI,CAAE,OADV,CAEII,IAAI,CAAE,uBAFV,CAjBM,CAqBN,CACIJ,IAAI,CAAE,OADV,CAEII,IAAI,CAAE,SAFV,CArBM,CAJd,CADM,CAgCN,CACIJ,IAAI,CAAE,UADV,CAEIE,IAAI,CAAE,MAFV,CAGIC,MAAM,CAAE,SAHZ,CAhCM,CAqCN,CACIH,IAAI,CAAE,UADV,CAEIE,IAAI,CAAE,WAFV,CAGIC,MAAM,CAAE,SAHZ,CArCM,CAFY,CAA1B,CA+CA,QAASE,CAAAA,kBAAT,CAA4BC,SAA5B,CAAuC,CACnC,GAAMC,CAAAA,IAAI,CAAGhB,OAAO,CAACiB,UAAR,CAAmBC,eAAnB,CAAmCH,SAAnC,CAAb,CACAT,iBAAiB,CAACU,IAAD,CAAjB,CACH,CAGD,eAAgCrB,QAAQ,CAAC,CAAD,CAAxC,yCAAOwB,QAAP,eAAiBC,WAAjB,eACA,GAAMC,CAAAA,KAAK,CAAG,CAAC,OAAD,CAAU,MAAV,CAAkB,WAAlB,CAA+B,OAA/B,CAAwC,YAAxC,CAAsD,UAAtD,CAAd,CACA,GAAMC,CAAAA,MAAM,CAAG,CAAC,SAAD,CAAY,SAAZ,CAAuB,SAAvB,CAAkC,SAAlC,CAA6C,SAA7C,CAAwD,SAAxD,CAAf,CAEA,mBACI,KAAC,gBAAD,EACI,SAAS,CAAC,SADd,CAEI,oBAAoB,CAAEd,iBAF1B,CAGI,UAAU,CAAED,UAHhB,CAII,sBAAsB,CAAE,CACpBgB,IAAI,CAAE,CACFC,OAAO,CAAE,EADP,CAEFC,MAAM,CAAE,CAFN,CAGFb,MAAM,CAAE,MAHN,CAIFc,IAAI,CAAE,IAJJ,CADc,CAJ5B,CAYI,iBAAiB,CAAEZ,kBAZvB,CAaI,WAAW,CAAEV,MAbjB,EADJ,CAiBH","sourcesContent":["//General\nimport React, { useState } from 'react';\n\n//Modules (No Minor Modules please)\n\n//Icons\nimport FolderIcon from '@mui/icons-material/Folder';\nimport PlayArrowIcon from '@mui/icons-material/PlayArrow';\nimport DangerousIcon from '@mui/icons-material/Dangerous';\nimport FiberNewIcon from '@mui/icons-material/FiberNew';\n\n//Blockly\nimport Blockly from \"blockly\";\nimport { BlocklyWorkspace } from \"react-blockly\";\nimport \"./blockly/blocks\";\n\n//Contexts\n\n//Style\nimport \"./styles/base.css\";\n\nexport default function Workspace() {\n    const [xml, setXml] = useState(\"\");\n    const [javascriptCode, setJavascriptCode] = useState(\"\");\n\n    const initialXml =\n        '<xml xmlns=\"http://www.w3.org/1999/xhtml\"><block type=\"text\" x=\"70\" y=\"30\"><field name=\"TEXT\"></field></block></xml>';\n    const toolboxCategories = {\n        kind: \"categoryToolbox\",\n        contents: [\n            {\n                kind: \"category\",\n                name: \"Basic\",\n                colour: \"#ed544c\",\n                contents: [\n                    {\n                        kind: \"block\",\n                        type: \"controls_if\",\n                    },\n                    {\n                        kind: \"block\",\n                        type: \"logic_compare\",\n                    },\n                    {\n                        kind: \"block\",\n                        type: \"math_round\",\n                    },\n                    {\n                        kind: \"block\",\n                        type: \"math_number\",\n                    },\n                    {\n                        kind: \"block\",\n                        type: \"new_boundary_function\",\n                    },\n                    {\n                        kind: \"block\",\n                        type: \"library\",\n                    },\n                ],\n            },\n            {\n                kind: \"category\",\n                name: \"Data\",\n                colour: \"#ed8f4c\",\n            },\n            {\n                kind: \"category\",\n                name: \"Wrangling\",\n                colour: \"#edd84c\",\n            },\n        ],\n    };\n\n    function workspaceDidChange(workspace) {\n        const code = Blockly.JavaScript.workspaceToCode(workspace);\n        setJavascriptCode(code);\n    }\n\n\n    const [selected, setSelected] = useState(0);\n    const cards = [\"Basic\", \"Data\", \"Wrangling\", \"Plots\", \"Statistics\", \"Modeling\"];\n    const colors = [\"#ed544c\", \"#ed8f4c\", \"#edd84c\", \"#7aed4c\", \"#824ced\", \"#ed4cc2\"];\n\n    return (\n        <BlocklyWorkspace\n            className=\"blockly\"\n            toolboxConfiguration={toolboxCategories}\n            initialXml={initialXml}\n            workspaceConfiguration={{\n                grid: {\n                    spacing: 20,\n                    length: 3,\n                    colour: \"#ccc\",\n                    snap: true,\n                },\n            }}\n            onWorkspaceChange={workspaceDidChange}\n            onXmlChange={setXml}\n        />\n    )\n}"]},"metadata":{},"sourceType":"module"}