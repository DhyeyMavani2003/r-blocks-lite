{"ast":null,"code":"var _jsxFileName = \"/Users/dhyeymavani/Documents/GitHub/r-blocks/src/pages/modules/workspace.js\",\n    _s = $RefreshSig$();\n\n//General\nimport React, { useState } from 'react'; //Modules (No Minor Modules please)\n//Icons\n\nimport FolderIcon from '@mui/icons-material/Folder';\nimport PlayArrowIcon from '@mui/icons-material/PlayArrow';\nimport DangerousIcon from '@mui/icons-material/Dangerous';\nimport FiberNewIcon from '@mui/icons-material/FiberNew'; //Blockly\n\nimport Blockly from \"blockly\";\nimport { BlocklyWorkspace } from \"react-blockly\";\nimport \"./blockly/blocks\"; //Contexts\n//Style\n\nimport \"./styles/base.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Workspace() {\n  _s();\n\n  const [xml, setXml] = useState(\"\");\n  const [javascriptCode, setJavascriptCode] = useState(\"\");\n  const initialXml = '<xml xmlns=\"http://www.w3.org/1999/xhtml\"><block type=\"text\" x=\"70\" y=\"30\"><field name=\"TEXT\"></field></block></xml>';\n  const toolboxCategories = {\n    kind: \"categoryToolbox\",\n    contents: [{\n      kind: \"category\",\n      name: \"Basic\",\n      colour: \"#ed544c\",\n      contents: [{\n        kind: \"block\",\n        type: \"controls_if\"\n      }, {\n        kind: \"block\",\n        type: \"logic_compare\"\n      }, {\n        kind: \"block\",\n        type: \"math_round\"\n      }, {\n        kind: \"block\",\n        type: \"math_number\"\n      }, {\n        kind: \"block\",\n        type: \"new_boundary_function\"\n      }, {\n        kind: \"block\",\n        type: \"library\"\n      }]\n    }, {\n      kind: \"category\",\n      name: \"Data Wrangling\",\n      colour: \"#ed8f4c\",\n      contents: [{\n        kind: \"block\",\n        type: \"lib\"\n      }, {\n        kind: \"block\",\n        type: \"req\"\n      }, {\n        kind: \"block\",\n        type: \"tallydata\"\n      }, {\n        kind: \"block\",\n        type: \"tallydataformat\"\n      }, {\n        kind: \"block\",\n        type: \"tallysexdata\"\n      }, {\n        kind: \"block\",\n        type: \"tallysexdata2\"\n      }, {\n        kind: \"block\",\n        type: \"tallysexformatdata\"\n      }, {\n        kind: \"block\",\n        type: \"favstatsdata\"\n      }, {\n        kind: \"block\",\n        type: \"favstatssubstancedata\"\n      }, {\n        kind: \"block\",\n        type: \"favstatssubstancedata2\"\n      }, {\n        kind: \"block\",\n        type: \"cor\"\n      }, {\n        kind: \"block\",\n        type: \"gf_bar\"\n      }, {\n        kind: \"block\",\n        type: \"pie\"\n      }, {\n        kind: \"block\",\n        type: \"gf_boxplot\"\n      }, {\n        kind: \"block\",\n        type: \"gf_boxplot_substance\"\n      }, {\n        kind: \"block\",\n        type: \"gf_histogram\"\n      }, {\n        kind: \"block\",\n        type: \"gf_histogram_substance\"\n      }, {\n        kind: \"block\",\n        type: \"gf_dens\"\n      }, {\n        kind: \"block\",\n        type: \"gf_dens_color\"\n      }, {\n        kind: \"block\",\n        type: \"gf_counts\"\n      }, {\n        kind: \"block\",\n        type: \"gf_percents\"\n      }, {\n        kind: \"block\",\n        type: \"gf_point\"\n      }, {\n        kind: \"block\",\n        type: \"gf_qq\"\n      }, {\n        kind: \"block\",\n        type: \"mosaicplot\"\n      }]\n    }]\n  };\n\n  function workspaceDidChange(workspace) {\n    const code = Blockly.JavaScript.workspaceToCode(workspace);\n    setJavascriptCode(code);\n  }\n\n  const [selected, setSelected] = useState(0);\n  const cards = [\"Basic\", \"Data Wrangling\", \"Plots\", \"Statistics\", \"Modeling\"];\n  const colors = [\"#ed544c\", \"#edd84c\", \"#7aed4c\", \"#824ced\", \"#ed4cc2\"];\n  initAddedDCLightExercises(); // added the js\n\n  return /*#__PURE__*/_jsxDEV(BlocklyWorkspace, {\n    className: \"blockly\",\n    toolboxConfiguration: toolboxCategories,\n    initialXml: initialXml,\n    workspaceConfiguration: {\n      grid: {\n        spacing: 20,\n        length: 3,\n        colour: \"#ccc\",\n        snap: true\n      }\n    },\n    onWorkspaceChange: workspaceDidChange,\n    onXmlChange: setXml\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Workspace, \"H1zX7aKhGwFts1TL0UL+ippnD4A=\");\n\n_c = Workspace;\n\nvar _c;\n\n$RefreshReg$(_c, \"Workspace\");","map":{"version":3,"sources":["/Users/dhyeymavani/Documents/GitHub/r-blocks/src/pages/modules/workspace.js"],"names":["React","useState","FolderIcon","PlayArrowIcon","DangerousIcon","FiberNewIcon","Blockly","BlocklyWorkspace","Workspace","xml","setXml","javascriptCode","setJavascriptCode","initialXml","toolboxCategories","kind","contents","name","colour","type","workspaceDidChange","workspace","code","JavaScript","workspaceToCode","selected","setSelected","cards","colors","initAddedDCLightExercises","grid","spacing","length","snap"],"mappings":"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","sourcesContent":["//General\nimport React, { useState } from 'react';\n\n//Modules (No Minor Modules please)\n\n//Icons\nimport FolderIcon from '@mui/icons-material/Folder';\nimport PlayArrowIcon from '@mui/icons-material/PlayArrow';\nimport DangerousIcon from '@mui/icons-material/Dangerous';\nimport FiberNewIcon from '@mui/icons-material/FiberNew';\n\n//Blockly\nimport Blockly from \"blockly\";\nimport { BlocklyWorkspace } from \"react-blockly\";\nimport \"./blockly/blocks\";\n\n//Contexts\n\n//Style\nimport \"./styles/base.css\";\n\nexport default function Workspace() {\n    const [xml, setXml] = useState(\"\");\n    const [javascriptCode, setJavascriptCode] = useState(\"\");\n\n    const initialXml =\n        '<xml xmlns=\"http://www.w3.org/1999/xhtml\"><block type=\"text\" x=\"70\" y=\"30\"><field name=\"TEXT\"></field></block></xml>';\n    const toolboxCategories = {\n        kind: \"categoryToolbox\",\n        contents: [\n            {\n                kind: \"category\",\n                name: \"Basic\",\n                colour: \"#ed544c\",\n                contents: [\n                    {\n                        kind: \"block\",\n                        type: \"controls_if\",\n                    },\n                    {\n                        kind: \"block\",\n                        type: \"logic_compare\",\n                    },\n                    {\n                        kind: \"block\",\n                        type: \"math_round\",\n                    },\n                    {\n                        kind: \"block\",\n                        type: \"math_number\",\n                    },\n                    {\n                        kind: \"block\",\n                        type: \"new_boundary_function\",\n                    },\n                    {\n                        kind: \"block\",\n                        type: \"library\",\n                    },\n                ],\n            },\n            {\n                kind: \"category\",\n                name: \"Data Wrangling\",\n                colour: \"#ed8f4c\",\n                contents: [\n                    {\n                        kind: \"block\",\n                        type: \"lib\",\n                    },\n                    {\n                        kind: \"block\",\n                        type: \"req\",\n                    },\n                    {\n                        kind: \"block\",\n                        type: \"tallydata\",\n                    },\n                    {\n                        kind: \"block\",\n                        type: \"tallydataformat\",\n                    },\n                    {\n                        kind: \"block\",\n                        type: \"tallysexdata\",\n                    },\n                    {\n                        kind: \"block\",\n                        type: \"tallysexdata2\",\n                    },\n                    {\n                        kind: \"block\",\n                        type: \"tallysexformatdata\",\n                    },\n                    {\n                        kind: \"block\",\n                        type: \"favstatsdata\",\n                    },\n                    {\n                        kind: \"block\",\n                        type: \"favstatssubstancedata\",\n                    },\n                    {\n                        kind: \"block\",\n                        type: \"favstatssubstancedata2\",\n                    },\n                    {\n                        kind: \"block\",\n                        type: \"cor\",\n                    },\n                    {\n                        kind: \"block\",\n                        type: \"gf_bar\",\n                    },\n                    {\n                        kind: \"block\",\n                        type: \"pie\",\n                    },\n                    {\n                        kind: \"block\",\n                        type: \"gf_boxplot\",\n                    },\n                    {\n                        kind: \"block\",\n                        type: \"gf_boxplot_substance\",\n                    },\n                    {\n                        kind: \"block\",\n                        type: \"gf_histogram\",\n                    },\n                    {\n                        kind: \"block\",\n                        type: \"gf_histogram_substance\",\n                    },\n                    {\n                        kind: \"block\",\n                        type: \"gf_dens\",\n                    },\n                    {\n                        kind: \"block\",\n                        type: \"gf_dens_color\",\n                    },\n                    {\n                        kind: \"block\",\n                        type: \"gf_counts\",\n                    },\n                    {\n                        kind: \"block\",\n                        type: \"gf_percents\",\n                    },\n                    {\n                        kind: \"block\",\n                        type: \"gf_point\",\n                    },\n                    {\n                        kind: \"block\",\n                        type: \"gf_qq\",\n                    },\n                    {\n                        kind: \"block\",\n                        type: \"mosaicplot\",\n                    },\n                    \n\n                ],\n            }\n        ],\n    };\n\n    function workspaceDidChange(workspace) {\n        const code = Blockly.JavaScript.workspaceToCode(workspace);\n        setJavascriptCode(code);\n    }\n\n\n    const [selected, setSelected] = useState(0);\n    const cards = [\"Basic\", \"Data Wrangling\", \"Plots\", \"Statistics\", \"Modeling\"];\n    const colors = [\"#ed544c\", \"#edd84c\", \"#7aed4c\", \"#824ced\", \"#ed4cc2\"];\n    initAddedDCLightExercises(); // added the js\n    return (\n        <BlocklyWorkspace\n            className=\"blockly\"\n            toolboxConfiguration={toolboxCategories}\n            initialXml={initialXml}\n            workspaceConfiguration={{\n                grid: {\n                    spacing: 20,\n                    length: 3,\n                    colour: \"#ccc\",\n                    snap: true,\n                },\n            }}\n            onWorkspaceChange={workspaceDidChange}\n            onXmlChange={setXml}\n        />\n    )\n}"]},"metadata":{},"sourceType":"module"}