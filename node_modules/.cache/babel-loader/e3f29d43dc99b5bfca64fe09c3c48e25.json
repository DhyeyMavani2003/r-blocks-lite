{"ast":null,"code":"import Blockly from 'blockly';\nimport 'blockly/javascript';\nBlockly.Blocks['new_boundary_function'] = {\n  init: function () {\n    this.appendDummyInput().appendField(new Blockly.FieldTextInput(\"Boundary Function Name\"), \"Name\");\n    this.appendStatementInput(\"Content\").setCheck(null);\n    this.setInputsInline(true);\n    this.setColour(15);\n    this.setTooltip(\"\");\n    this.setHelpUrl(\"\");\n  }\n};\n\nBlockly.JavaScript['new_boundary_function'] = function (block) {\n  var text_name = block.getFieldValue('Name');\n  var statements_content = Blockly.JavaScript.statementToCode(block, 'Content'); // TODO: Assemble JavaScript into code variable.\n\n  var code = 'def ' + text_name + '(_object,**kwargs):\\n' + statements_content + '\\n';\n  return code;\n};\n\nBlockly.Blocks['return'] = {\n  init: function () {\n    this.appendValueInput(\"NAME\").setCheck(null).appendField(\"return\");\n    this.setInputsInline(false);\n    this.setPreviousStatement(true, null);\n    this.setColour(330);\n    this.setTooltip(\"\");\n    this.setHelpUrl(\"\");\n  }\n};\n\nBlockly.JavaScript['return'] = function (block) {\n  var value_name = Blockly.JavaScript.valueToCode(block, 'NAME', Blockly.JavaScript.ORDER_ATOMIC); // TODO: Assemble JavaScript into code variable.\n\n  var code = 'return ' + value_name + '\\n';\n  return code;\n};\n\nBlockly.Blocks['library'] = {\n  init: function () {\n    this.appendValueInput(\"NAME\").setCheck(null).appendField(\"library:\").appendField(new Blockly.FieldTextInput(\"\"), \"library\");\n    this.setColour(200);\n    this.setInputsInline(false);\n    this.setNextStatement(true, null);\n    this.setTooltip(\"\");\n    this.setHelpUrl(\"\");\n  }\n};\n\nBlockly.JavaScript['library'] = function (block) {\n  var value_name = Blockly.JavaScript.valueToCode(block, 'NAME', Blockly.JavaScript.ORDER_ATOMIC); // TODO: Assemble JavaScript into code variable.\n\n  var code = 'return ' + value_name + '\\n';\n  return code;\n};\n\nBlockly.Blocks['lib'] = {\n  init: function () {\n    this.appendValueInput(\"lib_name\").setCheck(\"String\").setAlign(Blockly.ALIGN_CENTRE).appendField(\"library\");\n    this.setInputsInline(true);\n    this.setNextStatement(true, null);\n    this.setColour(230);\n    this.setTooltip(\"Provide the name of library you want to load into the system\");\n    this.setHelpUrl(\"\");\n  }\n};\n\nBlockly.JavaScript['lib'] = function (block) {\n  var value_lib_name = Blockly.JavaScript.valueToCode(block, 'lib_name', Blockly.JavaScript.ORDER_ATOMIC); // TODO: Assemble JavaScript into code variable.\n\n  var code = 'return ' + value_lib_name + '\\n';\n  return code;\n};\n\nBlockly.Blocks['req'] = {\n  init: function () {\n    this.appendValueInput(\"lib_name\").setCheck(\"String\").setAlign(Blockly.ALIGN_CENTRE).appendField(\"require\");\n    this.setInputsInline(true);\n    this.setPreviousStatement(true, null);\n    this.setNextStatement(true, null);\n    this.setColour(230);\n    this.setTooltip(\"Provide the name of library you want to load into the system\");\n    this.setHelpUrl(\"\");\n  }\n};\n\nBlockly.JavaScript['req'] = function (block) {\n  var value_lib_name = Blockly.JavaScript.valueToCode(block, 'lib_name', Blockly.JavaScript.ORDER_ATOMIC); // TODO: Assemble JavaScript into code variable.\n\n  var code = '...;\\n';\n  return code;\n};","map":{"version":3,"sources":["/Users/dhyeymavani/Documents/GitHub/r-blocks/src/pages/modules/blockly/blocks.js"],"names":["Blockly","Blocks","init","appendDummyInput","appendField","FieldTextInput","appendStatementInput","setCheck","setInputsInline","setColour","setTooltip","setHelpUrl","JavaScript","block","text_name","getFieldValue","statements_content","statementToCode","code","appendValueInput","setPreviousStatement","value_name","valueToCode","ORDER_ATOMIC","setNextStatement","setAlign","ALIGN_CENTRE","value_lib_name"],"mappings":"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","sourcesContent":["import Blockly from 'blockly';\nimport 'blockly/javascript';\n\nBlockly.Blocks['new_boundary_function'] = {\n    init: function () {\n        this.appendDummyInput()\n            .appendField(new Blockly.FieldTextInput(\"Boundary Function Name\"), \"Name\");\n        this.appendStatementInput(\"Content\")\n            .setCheck(null);\n        this.setInputsInline(true);\n        this.setColour(15);\n        this.setTooltip(\"\");\n        this.setHelpUrl(\"\");\n    }\n};\n\nBlockly.JavaScript['new_boundary_function'] = function (block) {\n    var text_name = block.getFieldValue('Name');\n    var statements_content = Blockly.JavaScript.statementToCode(block, 'Content');\n    // TODO: Assemble JavaScript into code variable.\n    var code = 'def ' + text_name + '(_object,**kwargs):\\n' + statements_content + '\\n';\n    return code;\n};\n\nBlockly.Blocks['return'] = {\n    init: function () {\n        this.appendValueInput(\"NAME\")\n            .setCheck(null)\n            .appendField(\"return\");\n        this.setInputsInline(false);\n        this.setPreviousStatement(true, null);\n        this.setColour(330);\n        this.setTooltip(\"\");\n        this.setHelpUrl(\"\");\n    }\n};\n\nBlockly.JavaScript['return'] = function (block) {\n    var value_name = Blockly.JavaScript.valueToCode(block, 'NAME', Blockly.JavaScript.ORDER_ATOMIC);\n    // TODO: Assemble JavaScript into code variable.\n    var code = 'return ' + value_name + '\\n';\n    return code;\n};\n\n\nBlockly.Blocks['library'] = {\n    init: function() {\n        this.appendValueInput(\"NAME\").setCheck(null).appendField(\"library:\").appendField(new Blockly.FieldTextInput(\"\"), \"library\");\n        this.setColour(200);\n        this.setInputsInline(false);\n        this.setNextStatement(true, null);\n        this.setTooltip(\"\");\n        this.setHelpUrl(\"\");\n    }\n};\n\nBlockly.JavaScript['library'] = function (block) {\n    var value_name = Blockly.JavaScript.valueToCode(block, 'NAME', Blockly.JavaScript.ORDER_ATOMIC);\n    // TODO: Assemble JavaScript into code variable.\n    var code = 'return ' + value_name + '\\n';\n    return code;\n};\n\nBlockly.Blocks['lib'] = {\n    init: function() {\n      this.appendValueInput(\"lib_name\")\n          .setCheck(\"String\")\n          .setAlign(Blockly.ALIGN_CENTRE)\n          .appendField(\"library\");\n      this.setInputsInline(true);\n      this.setNextStatement(true, null);\n      this.setColour(230);\n   this.setTooltip(\"Provide the name of library you want to load into the system\");\n   this.setHelpUrl(\"\");\n    }\n};\n\nBlockly.JavaScript['lib'] = function(block) {\n    var value_lib_name = Blockly.JavaScript.valueToCode(block, 'lib_name', Blockly.JavaScript.ORDER_ATOMIC);\n    // TODO: Assemble JavaScript into code variable.\n    var code = 'return ' + value_lib_name + '\\n';\n    return code;\n};\n\nBlockly.Blocks['req'] = {\n    init: function() {\n      this.appendValueInput(\"lib_name\")\n          .setCheck(\"String\")\n          .setAlign(Blockly.ALIGN_CENTRE)\n          .appendField(\"require\");\n      this.setInputsInline(true);\n      this.setPreviousStatement(true, null);\n      this.setNextStatement(true, null);\n      this.setColour(230);\n   this.setTooltip(\"Provide the name of library you want to load into the system\");\n   this.setHelpUrl(\"\");\n    }\n  };\n\nBlockly.JavaScript['req'] = function(block) {\n    var value_lib_name = Blockly.JavaScript.valueToCode(block, 'lib_name', Blockly.JavaScript.ORDER_ATOMIC);\n    // TODO: Assemble JavaScript into code variable.\n    var code = '...;\\n';\n    return code;\n};"]},"metadata":{},"sourceType":"module"}